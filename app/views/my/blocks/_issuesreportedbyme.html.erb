<h3><%=l(:label_reported_issues)%> (<%= Issue.visible.count(:conditions => { :author_id => User.current.id }) %>)</h3>

<% reported_issues = Issue.visible.find(:all,
                                :conditions => { :author_id => User.current.id },
                                :limit => 10,
                                :include => [ :status, :project, :tracker ],
                                :order => "#{Issue.table_name}.updated_on DESC") %>
<%= render :partial => 'issues/list_simple', :locals => { :issues => reported_issues,:not_readed=>false } %>
<% if reported_issues.length > 0 %>
<p class="small"><%= link_to l(:label_issue_view_all), :controller => 'issues',
                                                       :action => 'index',
                                                       :set_filter => 1,
                                                       :status_id => '*',
                                                       :author_id => 'me',
                                                       :sort => 'updated_on:desc' %></p>
<% end %>
<% if User.current.admin? %>
    <h2><%= l(:label_member_plural)+":"+l(:label_issues_not_read) %></h2>
    <%
       user_cur_id = User.current.id
       not_readed_issues= Issue.visible.open.where("assigner_viewed_on is NULL AND assigned_to_id >0 AND assigned_to_id <>#{user_cur_id} AND author_id <> #{user_cur_id}").order(" #{Issue.table_name}.created_on DESC").limit(30)
    %>
    <%= render :partial => 'issues/list_simple', :locals => { :issues => not_readed_issues,:not_readed=>true } %>
<% end  %>

<% content_for :header_tags do %>
<%= auto_discovery_link_tag(:atom,
                            {:controller => 'issues', :action => 'index', :set_filter => 1,
                             :author_id => 'me', :format => 'atom', :key => User.current.rss_key},
                            {:title => l(:label_reported_issues)}) %>
<% end %>
